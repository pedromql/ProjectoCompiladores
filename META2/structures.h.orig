#include <stdlib.h>

typedef struct _node {
	char *id;
<<<<<<< HEAD
	Node *brother;
	Node *son;
=======
	struct _node *brother;
	struct _node *son;
>>>>>>> fd0935a8a92f37063a7810b02ac7e01ddb28fa54
	
}Node;


Node *create_node(char *name,Node *brother,Node *son){
	
	Node *new = malloc(sizeof(Node));
	new->id = (char*)malloc(strlen(name)*sizeof(char));
	strcpy(new->id,name);
	new->brother = brother;
	new->son = son;
	return new;
}

<<<<<<< HEAD
Node root = malloc((Node)*sizeof(_node));
=======
void addBrother(Node * temp, Node * brother) {
	while (temp->brother != NULL) {
		temp = temp->brother;
	}
	temp->brother = brother;
}

void addChild(Node * temp, Node * child) {
	temp->son = child;
}

void printAll(Node * node) {
	if (node == NULL) return;
	printf("bla bla bla%s\n",node->id);
	printAll(node->son);
	printAll(node->brother);
}


>>>>>>> fd0935a8a92f37063a7810b02ac7e01ddb28fa54
